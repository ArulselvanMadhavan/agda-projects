* Programming Language Foundations in Agda
** Preface
   - Proposition as types asserts that a certain kind of formal
     structure may be read in two ways - either as proposition in
     logic or type in computing.
   - A related structure may be read as either the proof of the
     proposition or as a programme of the corresponding type.
   - Aims to teach operational semantics of a programming languages,
     with simply-typed lambda calculus.
* Symbols
-- ℕ  U+2115  DOUBLE-STRUCK CAPITAL N (\bN)
-- →  U+2192  RIGHTWARDS ARROW (\to, \r, \->)
-- ∸  U+2238  DOT MINUS (\.-)
-- ≡  U+2261  IDENTICAL TO (\==)
-- ⟨  U+27E8  MATHEMATICAL LEFT ANGLE BRACKET (\<)
-- ⟩  U+27E9  MATHEMATICAL RIGHT ANGLE BRACKET (\>)
-- ∎  U+220E  END OF PROOF (\qed)

